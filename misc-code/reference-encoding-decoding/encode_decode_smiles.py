import os
import warnings
import json
import csv
import random
import loading
import numpy as np
import datetime
import sys

import math

import multiprocessing as mp

from data import BondType

import logging

from tqdm import tqdm

warnings.filterwarnings("ignore")

os.environ["TF_CPP_MIN_LOG_LEVEL"] = "3"
os.environ["CUDA_VISIBLE_DEVICES"] = "1"

from spektral.data import BatchLoader, Dataset, Graph
from spektral import transforms

from extmodel5hk import VAE, NyanEncoder, NyanDecoder, EpochCounter

import scipy as sp
import tensorflow as tf

logging.getLogger("pysmiles").setLevel(logging.CRITICAL)
all_smiles = [sys.argv[1]]

strategy = tf.distribute.MirroredStrategy()
print("Number of devices: {}".format(strategy.num_replicas_in_sync))

save = "saves/ZINC-extmodel5hk-3M"
batch_size = 4
eval_all = True

processes = 32

f_scores = [1, 1, 1, 1, 1, 1, 1, 1, 0.15637751630916846, 1, 1, 0.2517220821744599, 1, 0.0030206176799464474, 1, 0.00013209184653431946, 1, 0.06087745694884252, 1, 0.08658936867919857, 0.007466367582382298, 0.0006714315979427125, 0.31764308599275193, 0.08754428440316742, 0.1204317791929629, 0.11954914651360823, 0.00011993082213810298, 0.09164657937945409, 0.027220302968054035, 0.00029693889361120555, 0.006917468364827532, 9.48316737790422e-05, 0.5871308320172947, 0.6089201454113585, 0.08616040465360461, 1, 0.1633365263012236, 0.24679994191556828, 0.5685184679566552, 0.000539242180847878, 0.0017976642424682584, 0.11267291596532042, 0.5080900174561997, 0.27367893079477223, 1, 0.0010205621746207784, 0.20374444695537425, 0.10471840707909724, 0.0005004518375509551, 0.5601875666413534, 0.1473440214451449, 0.9257271919584867, 0.7016147956292291, 0.2344049337072837, 0.4239524982438012, 0.9684845555776604, 0.12655857421510203, 0.5305950669992502, 0.9537876424386597, 0.5945250761604768, 0.9461261099262999, 0.9560885496008141, 0.49758090596771426, 0.15686891289879562, 0.623218031937902, 0.9861732193106976, 0.3674474540937346, 0.8538120412147295, 0.0030384961518407447, 0.2879220684902132, 0.3552237830061242, 0.2573883139566883, 0.4471616329626074, 0.9439491502275269, 0.5213833879204133, 0.8537498700944108, 0.13841462501366195, 0.7156297108696481, 0.015786718482319724, 0.8684782158767061, 0.8702262788464077, 0.5062151598374867, 0.7641673331010621, 0.8581374485175242, 0.2039627574764246, 0.8631752181657676, 0.7796336106556824, 0.6272106059991329, 0.658278046255986, 0.3693286985736171, 0.778920234523515, 0.8029513999995972, 0.9279310651136521, 0.5649574974000288, 0.7744008752894993, 0.7113481566633076, 0.8649468669722632, 0.6733943792796467, 0.6185768465511039, 0.2805874127452557, 0.9109495696901666, 0.543134977212056, 0.7306853632331821, 0.19429072549028492, 0.7718814205184181, 0.6785447743364869, 0.550215235198549, 0.6971816609581644, 0.6450782070845775, 0.7059595757603996, 0.974246737772309, 0.9221398480900092, 0.7238462226256304, 0.6014988797672274, 0.32404315326645444, 0.5694163289008093, 0.6345858938733036, 0.9824230641756548, 0.908334107976295, 0.1141604613421133, 0.9658770913513036, 0.9754562018215912, 0.8875515428965857, 0.4458088091824514, 0.8078553748204718, 0.9971067915554263, 0.7610670884964874, 0.5084847561189421, 0.9352516148598315, 0.9349309192447279, 0.781150312056712, 0.794021079231443, 0.7569967847677941, 0.6215990721811104, 0.7087751863159315, 0.5054305463997961, 0.9876102031450396, 0.9852520889232115, 0.8664474199729462, 0.3378126133604934, 0.8972202094860948, 0.9247218778654402, 0.9975181021026581, 0.5081204691901855, 0.5795225702039234, 0.8568095884493674, 0.9486289795359034, 0.9280036048454057, 0.9040629603224006, 0.9528560498982739, 0.6328065947928354, 0.9421076823917807, 0.7635549791730366, 0.9511985754218939, 0.9798317483001373, 0.919802255511392, 0.9970757683993214, 0.9586032453120418, 0.9974415120494914, 0.9862638566519978, 0.9865758109517682, 0.9998256702731245, 0.999877986937959, 0.973953559675453, 0.9987375582740036, 0.9999810567883464, 1, 0.32149554601162966, 0.5714466889708394, 0.12574122191216197, 0.12787716642745614, 0.494685898020507, 0.0806873560181948, 0.21915947386748114, 0.07740507218365171, 0.16666635849080444, 0.08720821414225514, 0.07219640509926797, 0.27820240827245035, 0.08198417372907568, 0.2209797406880244, 0.10588360060180665, 0.2396860972771579, 0.09438844058739529, 0.05951094371378545, 0.12450377447465426, 0.10668190937890479, 0.07876728443032059, 0.07149359042611843, 0.07194932819158201, 0.11000401189627385, 0.08081720581626202, 0.09837981380250625, 0.09430828517370594, 0.08251196384828198, 0.1989419633645651, 0.21393372714762765, 0.06305123875789338, 0.11365350040340308, 0.1323330102580241, 0.9862203145536961, 0.11209432643632897, 0.0754362773005925, 0.3543310423578766, 0.16542890955735257, 0.13584026598374507, 0.18590206600029008, 0.11263423526585084, 0.3393231290734779, 0.15761450928761428, 0.20832132929943858, 0.07784968074087312, 0.13324930549025274, 0.08869703358583858, 0.07658306137878015, 0.09779452188224345, 0.2089525096606585, 0.10705115752959958, 0.08490312205563481, 0.07674158236692372, 0.2674337422270467, 0.09338809608221453, 0.054342325539321557, 0.07546000949311153, 0.08204909501081004, 0.08303009139262414, 0.07028905884314074, 0.07820596451783067, 0.19961604548911027, 0.07329212022392552, 0.13377703569219118, 0.6354865951606893, 0.09235662934617093, 0.15074585106782878, 0.14076087349710176, 0.17736367166053826, 0.0990666095952695, 0.07428544334202498, 0.09357402246268941, 0.0740220628893492, 0.19902215017567854, 0.1463546304469739, 0.14371082958684187, 0.08866672191294886, 0.1318503474729122, 0.08712121809370908, 0.1356600719789854, 0.9276213044947798, 0.17016453065309284, 0.06319869014046842, 0.07221893058902662, 0.09371153454433513, 0.10233348821907728, 0.13915951307841803, 0.07521482083182138, 0.08064716311568144, 0.05165294221030728, 0.3948770728678796, 0.08244651159867282, 0.11752445242305982, 0.08927396819948788, 0.22700696094224115, 0.16251356173523276, 0.09592988770055005, 0.14752906057857051, 0.24339305171222902, 0.09446739139228073, 0.07201468967988484, 0.07487324321659396, 0.11893668839626652, 0.07088749886137681, 0.07767570937836273, 0.08154588015758976, 0.07214650115412279, 0.07921285955574493, 0.08503319530232695, 0.0831573639463373, 0.09786496590010291, 0.10073253133372095, 0.10115746162190668, 0.09588818685554112, 0.251697218627539, 0.05827772896981042, 0.09757941373705224, 0.28964833715099403, 0.18183170015699307, 0.15583776529639545, 0.08705805824091073, 0.28648994617310425, 0.09303320453930092, 0.08570147264397669, 0.0775679193445523, 0.10210153385156062, 0.12042112199705288, 0.08832079872056832, 0.8981859534780073, 0.1438317709174997, 0.11283203950338445, 0.12764840024529006, 0.06357776904688471, 0.10358279415820859, 0.16482955650811695, 0.11756718518713617, 0.2350588706409584, 0.06725210358944979, 0.9976750335265137, 0.20773828234231617, 0.34502540804230886, 0.06487480518022226, 0.07827045124847798, 0.10163471491052639, 0.5488096127559109, 0.19110280308272234, 0.11524872585966173, 0.31484822230495424, 0.07030633625905452, 0.0972230266013968, 0.07563249973806471, 0.06631037642915918, 0.07240254716498523, 0.11932294604065817, 0.3589295421961708, 0.3458608111380912, 0.11241849669293649, 0.08995363737507114, 0.12059022391755773, 0.2629241206761583, 0.0993881436517975, 0.19942328012645016, 0.18229330546692846, 0.19205271991749098, 0.06792814607229272, 0.1034844992006512, 0.08758748864331123, 0.11492507830021369, 0.12088184663540541, 0.07342272499441156, 0.07175872899218655, 0.10814667101797143, 0.11160038200208448, 0.08191347201870093, 0.06576519368908788, 0.5264975664246594, 0.06244057472294023, 0.22385081584078118, 0.07055176177708042, 0.09854635992681186, 0.14925972810658322, 0.09857721839395112, 0.17262462866072792, 0.7155918631821891, 0.15591482690194106, 0.06899399616230402, 0.49644096471758226, 0.33797260711183674, 0.10346445608537136, 0.14928246443597498, 0.10640768159362918, 0.33088961633855773, 0.10206711817328332, 0.31926757423925844, 0.0722863915574733, 0.15483142845332043, 0.08884239833431908, 0.6202447299744092, 0.08868644645933457, 0.061729467860169966, 0.12439348115912237, 0.09480731372350525, 0.2214363495809499, 0.2857567373554132, 0.1390925671354073, 0.10570126934039065, 0.20287282254755162, 0.10007406215242567, 0.09736720128552798, 0.1407192564612614, 0.060582796696800646, 0.07355031253247828, 0.16800512778733187, 0.09297227471623473, 0.951772498353249, 0.06955104652259653, 0.3044149448423418, 0.08225025309127856, 0.3563469395081983, 0.14012252374908715, 0.07431191749145612, 0.09511221465238266, 0.15651366583216642, 0.08174540461582541, 0.11238692984833712, 0.1386468466650059, 0.1083694679810413, 0.4004033407500719, 0.06944616583123951, 0.16203652190228068, 0.10559361915739505, 0.13188700870856276, 0.11341115615404329, 0.20926827898720732, 0.11061478272011818, 0.17515403566148308, 0.06938808240910777, 0.1481900643093276, 0.11972798497686311, 0.12931264051667007, 0.09059423271422753, 0.11346865704453787, 0.19711481512598822, 0.07540943205600606, 0.09197985446057808, 0.13430609231085622, 0.10499838763091626, 0.1603338018193294, 0.22204139340139223, 0.23544391667755799, 0.17454387359944037, 0.22279378882360656, 0.11696871245282611, 0.06088669753923597, 0.05867343639879807, 0.302260916579368, 0.09878468602749742, 0.1481473844620499, 0.07334230958204394, 0.10726198299049919, 0.08416255140512668, 0.08181447271720746, 0.07831843948986245, 0.09323203583603173, 0.07245961022651276, 0.1143351108083383, 0.08609087880299814, 0.08265315957137002, 0.16979239978060331, 0.14601144603163202, 0.07963555724425633, 0.12127803327565749, 0.09216609635865274, 0.10023340946910157, 0.09624944693753484, 0.11021384764072643, 0.08607909205035517, 0.0867067669347994, 0.1406520494182863, 0.06512935308390766, 0.4057532917528461, 0.11550333645643993, 0.12616217540811034, 0.4947412118407847, 0.10273684359055917, 0.2122908008729233, 0.10940807116542428, 0.16665691424834497, 0.16885201725508836, 0.2029197828138732, 0.1854414194240424, 0.07206847148967235, 0.07279878214086537, 0.08902734723572375, 0.3582154728099486, 0.9759324869846133, 0.07119907118190691, 0.13607630225505105, 0.05260942152695642, 0.06575355051913406, 0.07246429032900423, 0.7319427044058887, 0.10772880173536194, 0.08588518302143502, 0.2382396192614495, 0.09407062966623833, 0.06373135662813469, 0.08782759716469203, 0.06954832755359039, 0.10327364926687857, 0.2030793141066643, 0.08689643873934785, 0.12117985717093456, 0.06504758362662415, 0.3531089684145513, 0.06721582517668978, 0.09156606133489191, 0.11216084019616032, 0.10563450263082379, 0.4232558412745302, 0.11415062856347255, 0.09062564567323644, 0.25706044485373514, 0.14895356686026945, 0.10394983187455006, 0.2473648531562628, 0.1174570142374387, 0.10100718960745805, 0.08921669037393373, 0.5043202179224223, 0.33067886378244443, 0.2315323922501571, 0.07277869221943017, 0.14218676641827468, 0.11977715250822929, 0.13187754382091402, 0.09141886322219017, 0.994075493391459, 0.08831681918106479, 0.06286766881721283, 0.12454062467867427, 0.1679517748268208, 0.09955440171269646, 0.22483787223222113, 0.07785688364948057, 0.09185707730566614, 0.09587606251810896, 0.07143299970019838, 0.08154760773462792, 0.0871404360118344, 0.6572652647240003, 0.08389822940954435, 0.11208348397794218, 0.06264974908231316, 0.08973247155054975, 0.05943988508679298, 0.9971465344464564, 0.06707369925708302, 0.07039815935846394, 0.07381654058130876, 0.12172933811227402, 0.33354782833913627, 0.12831413249964035, 0.5337573064143565, 0.0835912557038209, 0.061735887860358045, 0.12063033795336302, 0.15979083001516053, 0.08894883563054509, 0.25333563947832555, 0.055679543383482105, 0.11035889202812865, 0.07729661967472197, 0.13309005256406733, 0.1453932862417515, 0.24063456909065342, 0.09394103856143902, 0.06220240449223539, 0.9318132796636196, 0.16029929860106384, 0.09957947791915547, 0.9735994661164946, 0.07814785578213443, 0.07046740285578776, 0.1958525553007981, 0.14288928150573926, 0.17159648023001414, 0.3464809573345209, 0.08090808470560906, 0.3716113121813696, 0.08901793074050005, 0.07244245599544225, 0.5727927736995155, 0.09831914613391718, 0.1311875352190926, 0.058340640217626014, 0.1118976084417771, 0.10781948161614396, 0.10782584341506068, 0.10380103685437847, 0.09242689455890873, 0.09613830597183734, 0.07347480160554155, 0.09934736916416227, 0.07492268415108752, 0.12243756962464936, 0.09289209316749847, 0.15284863495813372, 0.0687837329359504, 0.08753248413453837, 0.11977271241838706, 0.3394533104026806, 0.09223522771642692, 0.10657405964090959, 0.9899819723537597, 0.1127168885733403, 0.12521306023198026, 0.09947017211586662, 0.07539915508351822, 0.08386717636513057, 0.23257075901363272, 0.10359764820071408, 0.11605155146257473, 0.8205606191006128, 0.06600550395471337, 0.1164272400235206, 0.06980571345544123, 0.09559205269647353, 0.3810523552412288, 0.30664577297267087, 0.10714929993609815, 0.10526319065944408, 0.08009943855908491, 0.11333860913660602, 0.2613350307655347, 0.09691113054841821, 0.10838882080582576, 0.07956546660462548, 0.4017841409397479, 0.10460559831514299, 0.07646151258701996, 0.13699887521773352, 0.1401190762409686, 0.10437815832935138, 0.23560959893985026, 0.061067791436327255, 0.10965548283802898, 0.06180519775557946, 0.13133106258181654, 0.09956546545075744, 0.07619293233524466, 0.10251702543047425, 0.6604892161340037, 0.25901478514944554, 0.09734799923946719, 0.1872492631780857, 0.5776661200121135, 0.07353343316733074, 0.0680146065883412, 0.06289817264631911, 0.0716289653986111, 0.07642978266342838, 0.3193246655562457, 0.13247145828973084, 0.20936929890140593, 0.06932605051022848, 0.08112161290388324, 0.08796641423876718, 0.20779333037547662, 0.10165870808896668, 0.087303446169088, 0.07631332528892937, 0.08588818179495894, 0.5318612024845573, 0.13724810565168472, 0.07430845113590595, 0.06555400660527431, 0.12346800544427813, 0.11685795072108396, 0.0508382055326582, 0.33927245994041766, 0.09837892919189006, 0.1859013287800004, 0.08186064222833876, 0.11449423294871537, 0.09382508950517322, 0.39352495367563917, 0.10403017436295212, 0.12087500869593738, 0.1323900535971388, 0.09194584282722584, 0.08818115834357693, 0.10839765300841948, 0.17674834196146666, 0.09890102052182252, 0.13987916334087022, 0.14747202183114794, 0.24499583258777569, 0.12161188751635899, 0.07262911256967146, 0.0728075972679513, 0.1628494747939187, 0.1581748096339765, 0.08510262966243018, 0.07764588073099396, 0.21329948539665217, 0.09563389538071175, 0.8654028750616489, 0.08138027313183605, 0.07694088588718825, 0.06740729524538525, 0.31541896675046033]

with strategy.scope():

    encoder = NyanEncoder(latent_dim=64, batched=True)
    decoder = NyanDecoder(fingerprint_bits=679, regression=1613)

    model = VAE(encoder, decoder)
    model.load_weights(save).expect_partial()

print("Evaluating save {}".format(save))

# Initialise dataset
graph_data = list()

for smile in tqdm(all_smiles):

    if smile[0] == "":
        continue

    graph = loading.get_data(smile, only_biggest=True, unknown_atom_is_dummy=True)

    x, a, e = loading.convert(*graph, bonds=[BondType.SINGLE, BondType.DOUBLE, BondType.TRIPLE, BondType.AROMATIC, BondType.NOT_CONNECTED])

    graph = Graph(x=np.array(x), a=np.array(a), e=np.array(e), y=np.array(0))

    graph_data.append([graph, None])

class EvalDataset (Dataset):

    def __init__ (self, **kwargs):
        super().__init__(**kwargs)

    def read (self):
        return [x[0] for x in graph_data]

dataset = EvalDataset()
loader = BatchLoader(dataset, batch_size=batch_size, epochs=1, mask=True, shuffle=False, node_level=False)

predictions = model.predict(loader.load())
decoded_fingerprint = predictions[0].tolist()

#decoded_fingerprint = [round(x + 0.2) for x in decoded_fingerprint]

print(decoded_fingerprint[:679])

reference_fingerprints = open("NYAN-potentiator/morgan512_maccs.tsv").read().split("\n")[:-1]

def screen_fingerprint (reference_fingerprints, output):

    best_score = 167 + 512
    best_matches = [[None, best_score]]

    for reference_fingerprint in reference_fingerprints:

        fingerprint_entry = reference_fingerprint.split("\t")

        smiles = fingerprint_entry[0]
        fingerprint = [float(x) for x in list(fingerprint_entry[1])]

        maccs_difference = sum([abs(fingerprint[i] - decoded_fingerprint[i]) * f_scores[i] for i in range(167)])
        morgan_difference = sum([abs(fingerprint[i] - decoded_fingerprint[i]) * f_scores[i] for i in range(167, 512)])

        difference = maccs_difference + morgan_difference

        if difference >= best_matches[0][1]:
            continue

        best_matches = ([[smiles, difference]] + best_matches)[:10]

        output.append(best_matches)

manager = mp.Manager()
output = manager.list()

all_processes = list()

for i in range(processes):

    bottom = math.floor(i / processes * len(reference_fingerprints))
    top = math.floor((i + 1) / processes * len(reference_fingerprints))

    process = mp.Process(target=screen_fingerprint, args=[reference_fingerprints[bottom : top], output])

    all_processes.append(process)

for process in all_processes:
    process.start()

for process in tqdm(all_processes):
    process.join()
    process.close()

best_matches = list()

for best_match in output:
    best_matches += best_match

best_matches = sorted(best_matches, key=lambda x: x[1])[:10]

print("\nRESULTS {}\n===========".format(all_smiles[0]))

for i in range(len(best_matches)):

    best_match = best_matches[i]
    print(i + 1, best_match[0], best_match[1])
